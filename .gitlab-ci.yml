# vim: set expandtab shiftwidth=2 tabstop=8 textwidth=0 filetype=yaml:
#
# This CI uses the freedesktop.org ci-templates.
# Please see the ci-templates documentation for details:
# https://freedesktop.pages.freedesktop.org/ci-templates/

.templates_sha: &template_sha c5626190ec14b475271288dda7a7dae8dbe0cd76 # see https://docs.gitlab.com/ee/ci/yaml/#includefile


include:
  # Arch container builder template
  - project: 'freedesktop/ci-templates'
    ref: *template_sha
    file: '/templates/arch.yml'
  - project: 'freedesktop/ci-templates'
    ref: *template_sha
    file: '/templates/ci-fairy.yml'
  - template: Security/SAST.gitlab-ci.yml


stages:
  - prep             # prep work like rebuilding the container images if there is a change
  - build            # for actually building things in a container
  - check            # checking that autotools and meson yield same res
  - test
  - deploy


variables:
  FDO_UPSTREAM_REPO: 'xorg/proto/xcbproto'
  # The tag should be updated each time the list of packages is updated.
  # Changing a tag forces the associated image to be rebuilt.
  # Note: the tag has no meaning, we use a date format purely for readability
  FDO_DISTRIBUTION_TAG:  '2024-06-14.0'
  # Packages needed to build xcbproto
  XCBPROTO_PACKAGES:  'git gcc pkgconf autoconf automake make meson ninja libxml2 python'
  # Additional packages needed to build libxcb
  LIBXCB_PACKAGES:  'libtool xorg-util-macros doxygen graphviz check libxslt libxau libxdmcp'
  FDO_DISTRIBUTION_PACKAGES: $XCBPROTO_PACKAGES $LIBXCB_PACKAGES
  # Forcing to not use the time of compilation for Python (check)
  SOURCE_DATE_EPOCH: $(date "+%FT%T")

#
# Verify that commit messages are as expected
#
check-commits:
  extends:
    - .fdo.ci-fairy
  stage: prep
  script:
    - ci-fairy check-commits --junit-xml=results.xml
  except:
    - master@xorg/proto/xcbproto
  variables:
    GIT_DEPTH: 100
  artifacts:
    reports:
      junit: results.xml
  allow_failure: true

#
# Verify that the merge request has the allow-collaboration checkbox ticked
#
check-merge-request:
  extends:
    - .fdo.ci-fairy
  stage: deploy
  script:
    - ci-fairy check-merge-request --require-allow-collaboration --junit-xml=results.xml
  artifacts:
    when: on_failure
    reports:
      junit: results.xml
  allow_failure: true


#
# Build a container with the given tag and the packages pre-installed.
# This only happens if/when the tag changes, otherwise the existing image is
# re-used.
#
container-prep:
  extends:
    - .fdo.container-build@arch
  stage: prep
  variables:
    GIT_STRATEGY: none


#
# THESE ARE FOR VERIFYING THAT THE VANILLA AUTOTOOLS WORKS AND THAT
# LIBXCB CAN INDEED USE THE RESULT.
# Autotools will be rebuilt in another step for comparison with 
# Meson.
#
# The default build, runs on the image built above.
#
build:
  stage: build
  extends:
    - .fdo.distribution-image@arch
  script:
    - export INSTDIR="$PWD/_inst"
    - mkdir _builddir
    - pushd _builddir > /dev/null
    - ../autogen.sh --disable-silent-rules --prefix="$INSTDIR"
    - make
    - make check
    - make install
    - make distcheck	# creates the tarball
    - mv xcb-proto-*.tar.xz ..
    - popd > /dev/null
  variables:
  artifacts:
    paths:
      - _inst
      - xcb-proto-*.tar.xz

#
# Build libxcb with the new xcbproto, runs on the image built above.
#
build-libxcb:
  stage: test
  extends:
    - .fdo.distribution-image@arch
  script:
    - export INSTDIR="$PWD/_inst"
    - export PKG_CONFIG_PATH=$(find $INSTDIR/ -name '*.pc' -printf "%h:")
    - git clone --depth=1 https://gitlab.freedesktop.org/xorg/lib/libxcb
    - pushd libxcb > /dev/null
    - mkdir _builddir
    - pushd _builddir > /dev/null
    - ../autogen.sh --disable-silent-rules --enable-devel-docs --with-doxygen
    - make
    - make check
    - make install
    - make distcheck	# creates the tarball
    - popd > /dev/null
    - popd > /dev/null

#
# THESE COMPARE AUTOTOOLS VS MESON, INSURING THAT THE DEFAULT
# CONFIGURATION YIELDS THE SAME RESULT. IF THIS IS THE CASE,
# BUILDING LIBXCB WITH MESON WILL ALSO WORK: NO NEED TO TEST.
#

autotools:
  stage: build
  extends:
    - .fdo.distribution-image@arch
  script:
    - export SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH
    - export DESTDIR="$PWD/_autotools_inst"
    - mkdir _builddir0
    - pushd _builddir0 > /dev/null
    - ../autogen.sh --disable-silent-rules
    - make install
    - popd > /dev/null
  variables:
  artifacts:
    paths:
      - _autotools_inst

#
# With Autotools, if xmllint exists on the node (it exists: it is
# in the installed libxml2 package), testing is done. Whit Meson, we
# decided to explicitely require to check. Hence the option passed.
#
meson:
  extends:
    - .fdo.distribution-image@arch
  stage: build
  script:
    - export SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH
    - export DESTDIR=$PWD/_meson_inst
    - meson setup builddir -Dcheck_xml=true
    - meson install -C builddir
  artifacts:
    paths:
      - _meson_inst

#
# The configuration for Autotools and Meson generation/installation
# shall be so to yield the same result.
# Since the version is in the pc file, we do not test for version
# identity separately but we do compare pc generated files
# separately in order to compare them semantically and not literaly.
#
compare meson and autotools:
  extends:
    - .fdo.distribution-image@arch
  stage: check
  script:
    - git clone --depth=1 https://gitlab.freedesktop.org/xorg/util/modular
    - modular/auto-meson-pc-cmp.sh $PWD/_autotools_inst $PWD/_meson_inst
    - diff --brief --recursive -x '*.pc' $PWD/_autotools_inst $PWD/_meson_inst

#
# Verifying that one can build with Meson with the tarball generated
# by Autotools.
#
meson from autotools tarball:
  extends:
    - .fdo.distribution-image@arch
  stage: check
  script:
    - mkdir -p _tarball_build
    - tar xf xcb-proto-*.tar.xz -C _tarball_build
    - pushd _tarball_build/xcb-proto-*
    - meson setup builddir -Dcheck_xml=true
    - meson install -C builddir
  variables:
    GIT_STRATEGY: none

